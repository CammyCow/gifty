{"ast":null,"code":"import _regeneratorRuntime from\"/Users/camille/Documents/CodeProjects/FemmeHacks2022/gifty-341101/gifty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/camille/Documents/CodeProjects/FemmeHacks2022/gifty-341101/gifty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// Import the functions you need from the SDKs you need\nimport{GoogleAuthProvider,getAuth,signInWithPopup,signInWithEmailAndPassword,createUserWithEmailAndPassword,sendPasswordResetEmail,signOut}from\"firebase/auth\";import{getFirestore,query,getDocs,collection,where,addDoc}from\"firebase/firestore\";import{initializeApp}from\"firebase/app\";import{getAnalytics}from\"firebase/analytics\";// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig={apiKey:\"AIzaSyBl8kY69vE1dUl0JsJm13iH7BGZ5ji3CMI\",authDomain:\"gifty-341107.firebaseapp.com\",projectId:\"gifty-341107\",storageBucket:\"gifty-341107.appspot.com\",messagingSenderId:\"623517276696\",appId:\"1:623517276696:web:bd49f289bcdc739b7b416d\",measurementId:\"G-D4000NHNQZ\"};// Initialize Firebase\nvar app=initializeApp(firebaseConfig);export var auth=getAuth(app);var db=getFirestore(app);var googleProvider=new GoogleAuthProvider();var signInWithGoogle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,user,q,docs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return signInWithPopup(auth,googleProvider);case 3:res=_context.sent;user=res.user;q=query(collection(db,\"users\"),where(\"uid\",\"==\",user.uid));_context.next=8;return getDocs(q);case 8:docs=_context.sent;if(!(docs.docs.length===0)){_context.next=12;break;}_context.next=12;return addDoc(collection(db,\"users\"),{uid:user.uid,name:user.displayName,authProvider:\"google\",email:user.email});case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.error(_context.t0);alert(_context.t0.message);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function signInWithGoogle(){return _ref.apply(this,arguments);};}();export var logInWithEmailAndPassword=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return signInWithEmailAndPassword(auth,email,password);case 3:_context2.next=9;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);alert(_context2.t0.message);case 9:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return function logInWithEmailAndPassword(_x,_x2){return _ref2.apply(this,arguments);};}();export var registerWithEmailAndPassword=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name,email,password){var res,user;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return createUserWithEmailAndPassword(auth,email,password);case 3:res=_context3.sent;user=res.user;_context3.next=7;return addDoc(collection(db,\"users\"),{uid:user.uid,name:name,authProvider:\"local\",email:email});case 7:_context3.next=13;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);alert(_context3.t0.message);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function registerWithEmailAndPassword(_x3,_x4,_x5){return _ref3.apply(this,arguments);};}();var sendPasswordReset=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return sendPasswordResetEmail(auth,email);case 3:alert(\"Password reset link sent!\");_context4.next=10;break;case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0);alert(_context4.t0.message);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return function sendPasswordReset(_x6){return _ref4.apply(this,arguments);};}();export var logout=function logout(){signOut(auth);};","map":{"version":3,"sources":["/Users/camille/Documents/CodeProjects/FemmeHacks2022/gifty-341101/gifty/src/firebase.js"],"names":["GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","initializeApp","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","registerWithEmailAndPassword","sendPasswordReset","logout"],"mappings":"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","sourcesContent":["// Import the functions you need from the SDKs you need\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBl8kY69vE1dUl0JsJm13iH7BGZ5ji3CMI\",\n    authDomain: \"gifty-341107.firebaseapp.com\",\n    projectId: \"gifty-341107\",\n    storageBucket: \"gifty-341107.appspot.com\",\n    messagingSenderId: \"623517276696\",\n    appId: \"1:623517276696:web:bd49f289bcdc739b7b416d\",\n    measurementId: \"G-D4000NHNQZ\"\n};\n\n\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n    try {\n        const res = await signInWithPopup(auth, googleProvider);\n        const user = res.user;\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n        const docs = await getDocs(q);\n        if (docs.docs.length === 0) {\n            await addDoc(collection(db, \"users\"), {\n                uid: user.uid,\n                name: user.displayName,\n                authProvider: \"google\",\n                email: user.email,\n            });\n        }\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nexport const logInWithEmailAndPassword = async (email, password) => {\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nexport const registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n        const res = await createUserWithEmailAndPassword(auth, email, password);\n        const user = res.user;\n        await addDoc(collection(db, \"users\"), {\n            uid: user.uid,\n            name,\n            authProvider: \"local\",\n            email,\n        });\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst sendPasswordReset = async (email) => {\n    try {\n        await sendPasswordResetEmail(auth, email);\n        alert(\"Password reset link sent!\");\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nexport const logout = () => {\n    signOut(auth);\n};"]},"metadata":{},"sourceType":"module"}